spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVER_URL:localhost:9092}
DATA_SYNC_KAFKA_BROKER_URL="${KAFKA3_BROKER_ADDR}"
# The options for kafka.config.acks are: WAIT_FOR_ALL, NO_RESPONSE and WAIT_FOR_LOCAL
kafka.config.acks=${KAFKA_ACKS:WAIT_FOR_ALL}
kafka.max-block-milliseconds=${KAFKA_MAX_BLOCK_MILLISECONDS:60000}
kafka.topic.email=${CHS_NOTIFICATION_SENDER_EMAIL_TOPIC:chs-notification-email}
kafka.group-id.email=${EMAIL_GROUP_ID:chs-notification-email-consumer}
kafka.topic.letter=${CHS_NOTIFICATION_SENDER_LETTER_TOPIC:chs-notification-letter}
kafka.group-id.letter=${LETTER_GROUP_ID:chs-notification-letter-consumer}
kafka.max-attempts=${MAX_ATTEMPTS:5}
kafka.backoff-delay=${BACKOFF_DELAY:1000}
kafka.concurrency=${CONCURRENT_LISTENER_INSTANCES:1}
management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=/healthcheck
management.health.mongo.enabled=false
management.endpoints.security.path-mapping.api=/notification-sender/**
management.endpoint.health.access=read_only
management.endpoint.health.show-details=never
transaction-id-salt=${TRANSACTION_ID_SALT:salt}
api.api-key=${CHS_NOTIFICATION_SENDER_API_KEY:testkey}
api.api-url=${API_LOCAL_URL:http://localhost:8888}
logging.level.root=${LOG_LEVEL:WARN}

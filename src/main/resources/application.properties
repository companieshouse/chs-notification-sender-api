spring.application.name=chs-notification-sender-api
spring.kafka.bootstrap-servers=${BOOTSTRAP_SERVER_URL:localhost:9092}
DATA_SYNC_KAFKA_BROKER_URL="${KAFKA3_BROKER_ADDR}"

kafka.topic.email=${CHS_NOTIFICATION_SENDER_EMAIL_TOPIC:chs-notification-email}
kafka.group-id.email=${EMAIL_GROUP_ID:chs-notification-email-consumer}

kafka.topic.letter=${CHS_NOTIFICATION_SENDER_LETTER_TOPIC:chs-notification-letter}
kafka.group-id.letter=${LETTER_GROUP_ID:chs-notification-letter-consumer}

kafka.max-attempts=${MAX_ATTEMPTS:5}
kafka.backoff-delay=${BACKOFF_DELAY:1000}
kafka.concurrency=${CONCURRENT_LISTENER_INSTANCES:1}

management.endpoints.web.base-path=/
management.endpoints.web.path-mapping.health=/chs-notification-sender-api/healthcheck
management.endpoint.health.enabled=true
management.endpoint.health.show-details=never
management.health.mongo.enabled=false

#management.server.port=9000
#management.endpoints.web.exposure.include=*
#management.endpoint.health.group.custom.include=diskSpace,ping
#
#management.endpoint.health.show-details=always
#
#management.info.env.enabled=true
#management.info.build.enabled=true
#management.info.git.enabled=true
#management.info.java.enabled=true
#management.info.os.enabled=true
#
#info.application.name=chs-notification-sender-api
#info.application.description=Public facing REST API for sending letters, emails and SMS
#info.organization=Companies House

transaction-id-salt=${TRANSACTION_ID_SALT:salt}

api.api-key=${CHS_NOTIFICATION_SENDER_API_KEY:testkey}
api.api-url=${API_LOCAL_URL:http://localhost:8888}

server.port=${PORT:8081}
logging.level.root=${LOG_LEVEL:WARN}
logging.level.uk.gov.companieshouse.chs.notification.sender.api=DEBUG
